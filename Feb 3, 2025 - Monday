Feb 3, 2025 - Monday

Problem 1: Find the Majority Element II
Given a list of integers, find all elements that appear more than n/3 times. (Unlike the previous majority element problem, there may be multiple such elements or none at all.)

def majority_element_ii(nums):
    maj_nums = []
    for num in nums:
        if num not in maj_nums:
            if nums.count(num) > len(nums) / 3: maj_nums.append(num)
    return maj_nums


Problem 2: Find the First Unique Character in a String
Given a string, find the first non-repeating character and return its index. If no unique character exists, return -1.

def first_unique_char(s):
    for i in s:
        if s.count(i) == 1:
            return s.index(i)
        
    return -1


Problem 3: Design a Rate Limiter
Implement a rate limiter where a function can only be called once per X seconds. If itâ€™s called too soon, return False. Otherwise, return True and allow execution.

import time

last_request_time = 0

def allow_request(interval):
    global last_request_time
    current_time = time.time()

    if current_time - last_request_time >= interval:
        last_request_time = current_time
        return True
    
    return False
