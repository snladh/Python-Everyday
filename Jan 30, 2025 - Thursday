Problem 1: Find the Majority Element
Given a list of integers, find the majority element (the element that appears more than n/2 times). Assume that a majority element always exists.

def majority_element(nums):
    half = len(nums)/2
    for i in nums:
        if nums.count(i) > half:
            return i

Problem 2: Find the First Missing Positive Integer
Given an unsorted list of integers, find the smallest missing positive integer.

def first_missing_positive(nums):
    for i in range(1,len(nums)+1):
        if i not in nums:
            return i

Problem 3: Find Top K Frequent Elements
Given a list of numbers, return the K most frequent elements in descending order of frequency.

def top_k_frequent(nums, k):
    from collections import Counter
    dict1 = Counter(nums)
    sorted_dict = dict(sorted(dict1.items(), key=lambda item:item[1], reverse=True))
    top_k = list(sorted_dict.items())[:k]
    return list(map(lambda item: item[0], top_k))
